jvm.DataSeries=function(t,e){var s;t=t||{},t.attribute=t.attribute||"fill",this.elements=e,this.params=t,t.attributes&&this.setAttributes(t.attributes),jvm.$.isArray(t.scale)?(s="fill"===t.attribute||"stroke"===t.attribute?jvm.ColorScale:jvm.NumericScale,this.scale=new s(t.scale,t.normalizeFunction,t.min,t.max)):this.scale=t.scale?new jvm.OrdinalScale(t.scale):new jvm.SimpleScale(t.scale),this.values=t.values||{},this.setValues(this.values)},jvm.DataSeries.prototype={setAttributes:function(t,e){var s,i=t;if("string"==typeof t)this.elements[t]&&this.elements[t].setStyle(this.params.attribute,e);else for(s in i)this.elements[s]&&this.elements[s].element.setStyle(this.params.attribute,i[s])},setValues:function(t){var e,s,i=Number.MIN_VALUE,a=Number.MAX_VALUE,l={};if(this.scale instanceof jvm.OrdinalScale||this.scale instanceof jvm.SimpleScale)for(s in t)l[s]=t[s]?this.scale.getValue(t[s]):this.elements[s].element.style.initial[this.params.attribute];else{if(!this.params.min||!this.params.max){for(s in t)e=parseFloat(t[s]),e>i&&(i=t[s]),a>e&&(a=e);this.params.min||this.scale.setMin(a),this.params.max||this.scale.setMax(i),this.params.min=a,this.params.max=i}for(s in t)e=parseFloat(t[s]),l[s]=isNaN(e)?this.elements[s].element.style.initial[this.params.attribute]:this.scale.getValue(e)}this.setAttributes(l),jvm.$.extend(this.values,t)},clear:function(){var t,e={};for(t in this.values)this.elements[t]&&(e[t]=this.elements[t].element.style.initial[this.params.attribute]);this.setAttributes(e),this.values={}},setScale:function(t){this.scale.setScale(t),this.values&&this.setValues(this.values)},setNormalizeFunction:function(t){this.scale.setNormalizeFunction(t),this.values&&this.setValues(this.values)}};