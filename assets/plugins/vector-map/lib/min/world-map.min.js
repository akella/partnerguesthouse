jvm.WorldMap=function(e){var t,s=this;if(this.params=jvm.$.extend(!0,{},jvm.WorldMap.defaultParams,e),!jvm.WorldMap.maps[this.params.map])throw new Error("Attempt to use map which was not loaded: "+this.params.map);this.mapData=jvm.WorldMap.maps[this.params.map],this.markers={},this.regions={},this.regionsColors={},this.regionsData={},this.container=jvm.$("<div>").css({width:"100%",height:"100%"}).addClass("jvectormap-container"),this.params.container.append(this.container),this.container.data("mapObject",this),this.container.css({position:"relative",overflow:"hidden"}),this.defaultWidth=this.mapData.width,this.defaultHeight=this.mapData.height,this.setBackgroundColor(this.params.backgroundColor),this.onResize=function(){s.setSize()},jvm.$(window).resize(this.onResize);for(t in jvm.WorldMap.apiEvents)this.params[t]&&this.container.bind(jvm.WorldMap.apiEvents[t]+".jvectormap",this.params[t]);this.canvas=new jvm.VectorCanvas(this.container[0],this.width,this.height),"ontouchstart"in window||window.DocumentTouch&&document instanceof DocumentTouch?this.params.bindTouchEvents&&this.bindContainerTouchEvents():this.bindContainerEvents(),this.bindElementEvents(),this.createLabel(),this.params.zoomButtons&&this.bindZoomButtons(),this.createRegions(),this.createMarkers(this.params.markers||{}),this.setSize(),this.params.focusOn&&("object"==typeof this.params.focusOn?this.setFocus.call(this,this.params.focusOn.scale,this.params.focusOn.x,this.params.focusOn.y):this.setFocus.call(this,this.params.focusOn)),this.params.selectedRegions&&this.setSelectedRegions(this.params.selectedRegions),this.params.selectedMarkers&&this.setSelectedMarkers(this.params.selectedMarkers),this.params.series&&this.createSeries()},jvm.WorldMap.prototype={transX:0,transY:0,scale:1,baseTransX:0,baseTransY:0,baseScale:1,width:0,height:0,setBackgroundColor:function(e){this.container.css("background-color",e)},resize:function(){var e=this.baseScale;this.width/this.height>this.defaultWidth/this.defaultHeight?(this.baseScale=this.height/this.defaultHeight,this.baseTransX=Math.abs(this.width-this.defaultWidth*this.baseScale)/(2*this.baseScale)):(this.baseScale=this.width/this.defaultWidth,this.baseTransY=Math.abs(this.height-this.defaultHeight*this.baseScale)/(2*this.baseScale)),this.scale*=this.baseScale/e,this.transX*=this.baseScale/e,this.transY*=this.baseScale/e},setSize:function(){this.width=this.container.width(),this.height=this.container.height(),this.resize(),this.canvas.setSize(this.width,this.height),this.applyTransform()},reset:function(){var e,t;for(e in this.series)for(t=0;t<this.series[e].length;t++)this.series[e][t].clear();this.scale=this.baseScale,this.transX=this.baseTransX,this.transY=this.baseTransY,this.applyTransform()},applyTransform:function(){var e,t,s,a;this.defaultWidth*this.scale<=this.width?(e=(this.width-this.defaultWidth*this.scale)/(2*this.scale),s=(this.width-this.defaultWidth*this.scale)/(2*this.scale)):(e=0,s=(this.width-this.defaultWidth*this.scale)/this.scale),this.defaultHeight*this.scale<=this.height?(t=(this.height-this.defaultHeight*this.scale)/(2*this.scale),a=(this.height-this.defaultHeight*this.scale)/(2*this.scale)):(t=0,a=(this.height-this.defaultHeight*this.scale)/this.scale),this.transY>t?this.transY=t:this.transY<a&&(this.transY=a),this.transX>e?this.transX=e:this.transX<s&&(this.transX=s),this.canvas.applyTransformParams(this.scale,this.transX,this.transY),this.markers&&this.repositionMarkers(),this.container.trigger("viewportChange",[this.scale/this.baseScale,this.transX,this.transY])},bindContainerEvents:function(){var e,t,s=!1,a=this;this.container.mousemove(function(i){return s&&(a.transX-=(e-i.pageX)/a.scale,a.transY-=(t-i.pageY)/a.scale,a.applyTransform(),e=i.pageX,t=i.pageY),!1}).mousedown(function(a){return s=!0,e=a.pageX,t=a.pageY,!1}),jvm.$("body").mouseup(function(){s=!1}),this.params.zoomOnScroll&&this.container.mousewheel(function(e,t,s,i){var r=jvm.$(a.container).offset(),n=e.pageX-r.left,h=e.pageY-r.top,o=Math.pow(1.3,i);a.label.hide(),a.setScale(a.scale*o,n,h),e.preventDefault()})},bindContainerTouchEvents:function(){var e,t,s,a,i,r,n,h=this,o=function(o){var l,c,m,d,p=o.originalEvent.touches;"touchstart"==o.type&&(n=0),1==p.length?(1==n&&(m=h.transX,d=h.transY,h.transX-=(s-p[0].pageX)/h.scale,h.transY-=(a-p[0].pageY)/h.scale,h.applyTransform(),h.label.hide(),(m!=h.transX||d!=h.transY)&&o.preventDefault()),s=p[0].pageX,a=p[0].pageY):2==p.length&&(2==n?(c=Math.sqrt(Math.pow(p[0].pageX-p[1].pageX,2)+Math.pow(p[0].pageY-p[1].pageY,2))/t,h.setScale(e*c,i,r),h.label.hide(),o.preventDefault()):(l=jvm.$(h.container).offset(),i=p[0].pageX>p[1].pageX?p[1].pageX+(p[0].pageX-p[1].pageX)/2:p[0].pageX+(p[1].pageX-p[0].pageX)/2,r=p[0].pageY>p[1].pageY?p[1].pageY+(p[0].pageY-p[1].pageY)/2:p[0].pageY+(p[1].pageY-p[0].pageY)/2,i-=l.left,r-=l.top,e=h.scale,t=Math.sqrt(Math.pow(p[0].pageX-p[1].pageX,2)+Math.pow(p[0].pageY-p[1].pageY,2)))),n=p.length};jvm.$(this.container).bind("touchstart",o),jvm.$(this.container).bind("touchmove",o)},bindElementEvents:function(){var e,t=this;this.container.mousemove(function(){e=!0}),this.container.delegate("[class~='jvectormap-element']","mouseover mouseout",function(e){var s=jvm.$(this).attr("class").baseVal?jvm.$(this).attr("class").baseVal:jvm.$(this).attr("class"),a=-1===s.indexOf("jvectormap-region")?"marker":"region",i="region"==a?jvm.$(this).attr("data-code"):jvm.$(this).attr("data-index"),r="region"==a?t.regions[i].element:t.markers[i].element,n="region"==a?t.mapData.paths[i].name:t.markers[i].config.name||"",h=jvm.$.Event(a+"LabelShow.jvectormap"),o=jvm.$.Event(a+"Over.jvectormap");"mouseover"==e.type?(t.container.trigger(o,[i]),o.isDefaultPrevented()||r.setHovered(!0),t.label.text(n),t.container.trigger(h,[t.label,i]),h.isDefaultPrevented()||(t.label.show(),t.labelWidth=t.label.width(),t.labelHeight=t.label.height())):(r.setHovered(!1),t.label.hide(),t.container.trigger(a+"Out.jvectormap",[i]))}),this.container.delegate("[class~='jvectormap-element']","mousedown",function(){e=!1}),this.container.delegate("[class~='jvectormap-element']","mouseup",function(){var s=jvm.$(this).attr("class").baseVal?jvm.$(this).attr("class").baseVal:jvm.$(this).attr("class"),a=-1===s.indexOf("jvectormap-region")?"marker":"region",i="region"==a?jvm.$(this).attr("data-code"):jvm.$(this).attr("data-index"),r=jvm.$.Event(a+"Click.jvectormap"),n="region"==a?t.regions[i].element:t.markers[i].element;e||(t.container.trigger(r,[i]),("region"===a&&t.params.regionsSelectable||"marker"===a&&t.params.markersSelectable)&&(r.isDefaultPrevented()||(t.params[a+"sSelectableOne"]&&t.clearSelected(a+"s"),n.setSelected(!n.isSelected))))})},bindZoomButtons:function(){var e=this;jvm.$("<div/>").addClass("jvectormap-zoomin").text("+").appendTo(this.container),jvm.$("<div/>").addClass("jvectormap-zoomout").html("&#x2212;").appendTo(this.container),this.container.find(".jvectormap-zoomin").click(function(){e.setScale(e.scale*e.params.zoomStep,e.width/2,e.height/2)}),this.container.find(".jvectormap-zoomout").click(function(){e.setScale(e.scale/e.params.zoomStep,e.width/2,e.height/2)})},createLabel:function(){var e=this;this.label=jvm.$("<div/>").addClass("jvectormap-label").appendTo(jvm.$("body")),this.container.mousemove(function(t){var s=t.pageX-15-e.labelWidth,a=t.pageY-15-e.labelHeight;5>s&&(s=t.pageX+15),5>a&&(a=t.pageY+15),e.label.is(":visible")&&e.label.css({left:s,top:a})})},setScale:function(e,t,s,a){var i,r=jvm.$.Event("zoom.jvectormap");e>this.params.zoomMax*this.baseScale?e=this.params.zoomMax*this.baseScale:e<this.params.zoomMin*this.baseScale&&(e=this.params.zoomMin*this.baseScale),"undefined"!=typeof t&&"undefined"!=typeof s&&(i=e/this.scale,a?(this.transX=t+this.defaultWidth*(this.width/(this.defaultWidth*e))/2,this.transY=s+this.defaultHeight*(this.height/(this.defaultHeight*e))/2):(this.transX-=(i-1)/e*t,this.transY-=(i-1)/e*s)),this.scale=e,this.applyTransform(),this.container.trigger(r,[e/this.baseScale])},setFocus:function(e,t,s){var a,i,r,n,h;if(jvm.$.isArray(e)||this.regions[e]){for(n=jvm.$.isArray(e)?e:[e],h=0;h<n.length;h++)this.regions[n[h]]&&(i=this.regions[n[h]].element.getBBox(),i&&("undefined"==typeof a?a=i:(r={x:Math.min(a.x,i.x),y:Math.min(a.y,i.y),width:Math.max(a.x+a.width,i.x+i.width)-Math.min(a.x,i.x),height:Math.max(a.y+a.height,i.y+i.height)-Math.min(a.y,i.y)},a=r)));this.setScale(Math.min(this.width/a.width,this.height/a.height),-(a.x+a.width/2),-(a.y+a.height/2),!0)}else e*=this.baseScale,this.setScale(e,-t*this.defaultWidth,-s*this.defaultHeight,!0)},getSelected:function(e){var t,s=[];for(t in this[e])this[e][t].element.isSelected&&s.push(t);return s},getSelectedRegions:function(){return this.getSelected("regions")},getSelectedMarkers:function(){return this.getSelected("markers")},setSelected:function(e,t){var s;if("object"!=typeof t&&(t=[t]),jvm.$.isArray(t))for(s=0;s<t.length;s++)this[e][t[s]].element.setSelected(!0);else for(s in t)this[e][s].element.setSelected(!!t[s])},setSelectedRegions:function(e){this.setSelected("regions",e)},setSelectedMarkers:function(e){this.setSelected("markers",e)},clearSelected:function(e){var t,s={},a=this.getSelected(e);for(t=0;t<a.length;t++)s[a[t]]=!1;this.setSelected(e,s)},clearSelectedRegions:function(){this.clearSelected("regions")},clearSelectedMarkers:function(){this.clearSelected("markers")},getMapObject:function(){return this},getRegionName:function(e){return this.mapData.paths[e].name},createRegions:function(){var e,t,s=this;for(e in this.mapData.paths)t=this.canvas.addPath({d:this.mapData.paths[e].path,"data-code":e},jvm.$.extend(!0,{},this.params.regionStyle)),jvm.$(t.node).bind("selected",function(e,t){s.container.trigger("regionSelected.jvectormap",[jvm.$(this).attr("data-code"),t,s.getSelectedRegions()])}),t.addClass("jvectormap-region jvectormap-element"),this.regions[e]={element:t,config:this.mapData.paths[e]}},createMarkers:function(e){var t,s,a,i,r,n=this;if(this.markersGroup=this.markersGroup||this.canvas.addGroup(),jvm.$.isArray(e))for(r=e.slice(),e={},t=0;t<r.length;t++)e[t]=r[t];for(t in e)i=e[t]instanceof Array?{latLng:e[t]}:e[t],a=this.getMarkerPosition(i),a!==!1&&(s=this.canvas.addCircle({"data-index":t,cx:a.x,cy:a.y},jvm.$.extend(!0,{},this.params.markerStyle,{initial:i.style||{}}),this.markersGroup),s.addClass("jvectormap-marker jvectormap-element"),jvm.$(s.node).bind("selected",function(e,t){n.container.trigger("markerSelected.jvectormap",[jvm.$(this).attr("data-index"),t,n.getSelectedMarkers()])}),this.markers[t]&&this.removeMarkers([t]),this.markers[t]={element:s,config:i})},repositionMarkers:function(){var e,t;for(e in this.markers)t=this.getMarkerPosition(this.markers[e].config),t!==!1&&this.markers[e].element.setStyle({cx:t.x,cy:t.y})},getMarkerPosition:function(e){return jvm.WorldMap.maps[this.params.map].projection?this.latLngToPoint.apply(this,e.latLng||[0,0]):{x:e.coords[0]*this.scale+this.transX*this.scale,y:e.coords[1]*this.scale+this.transY*this.scale}},addMarker:function(e,t,s){var a,i,r={},n=[],s=s||[];for(r[e]=t,i=0;i<s.length;i++)a={},a[e]=s[i],n.push(a);this.addMarkers(r,n)},addMarkers:function(e,t){var s;for(t=t||[],this.createMarkers(e),s=0;s<t.length;s++)this.series.markers[s].setValues(t[s]||{})},removeMarkers:function(e){var t;for(t=0;t<e.length;t++)this.markers[e[t]].element.remove(),delete this.markers[e[t]]},removeAllMarkers:function(){var e,t=[];for(e in this.markers)t.push(e);this.removeMarkers(t)},latLngToPoint:function(e,t){{var s,a,i,r=jvm.WorldMap.maps[this.params.map].projection,n=r.centralMeridian;this.width-2*this.baseTransX*this.baseScale,this.height-2*this.baseTransY*this.baseScale,this.scale/this.baseScale}return-180+n>t&&(t+=360),s=jvm.Proj[r.type](e,t,n),a=this.getInsetForPoint(s.x,s.y),a?(i=a.bbox,s.x=(s.x-i[0].x)/(i[1].x-i[0].x)*a.width*this.scale,s.y=(s.y-i[0].y)/(i[1].y-i[0].y)*a.height*this.scale,{x:s.x+this.transX*this.scale+a.left*this.scale,y:s.y+this.transY*this.scale+a.top*this.scale}):!1},pointToLatLng:function(e,t){var s,a,i,r,n,h=jvm.WorldMap.maps[this.params.map].projection,o=h.centralMeridian,l=jvm.WorldMap.maps[this.params.map].insets;for(s=0;s<l.length;s++)if(a=l[s],i=a.bbox,r=e-(this.transX*this.scale+a.left*this.scale),n=t-(this.transY*this.scale+a.top*this.scale),r=r/(a.width*this.scale)*(i[1].x-i[0].x)+i[0].x,n=n/(a.height*this.scale)*(i[1].y-i[0].y)+i[0].y,r>i[0].x&&r<i[1].x&&n>i[0].y&&n<i[1].y)return jvm.Proj[h.type+"_inv"](r,-n,o);return!1},getInsetForPoint:function(e,t){var s,a,i=jvm.WorldMap.maps[this.params.map].insets;for(s=0;s<i.length;s++)if(a=i[s].bbox,e>a[0].x&&e<a[1].x&&t>a[0].y&&t<a[1].y)return i[s]},createSeries:function(){var e,t;this.series={markers:[],regions:[]};for(t in this.params.series)for(e=0;e<this.params.series[t].length;e++)this.series[t][e]=new jvm.DataSeries(this.params.series[t][e],this[t])},remove:function(){this.label.remove(),this.container.remove(),jvm.$(window).unbind("resize",this.onResize)}},jvm.WorldMap.maps={},jvm.WorldMap.defaultParams={map:"world_mill_en",backgroundColor:"#505050",zoomButtons:!0,zoomOnScroll:!0,zoomMax:8,zoomMin:1,zoomStep:1.6,regionsSelectable:!1,markersSelectable:!1,bindTouchEvents:!0,regionStyle:{initial:{fill:"white","fill-opacity":1,stroke:"none","stroke-width":0,"stroke-opacity":1},hover:{"fill-opacity":.8},selected:{fill:"yellow"},selectedHover:{}},markerStyle:{initial:{fill:"grey",stroke:"#505050","fill-opacity":1,"stroke-width":1,"stroke-opacity":1,r:5},hover:{stroke:"black","stroke-width":2},selected:{fill:"blue"},selectedHover:{}}},jvm.WorldMap.apiEvents={onRegionLabelShow:"regionLabelShow",onRegionOver:"regionOver",onRegionOut:"regionOut",onRegionClick:"regionClick",onRegionSelected:"regionSelected",onMarkerLabelShow:"markerLabelShow",onMarkerOver:"markerOver",onMarkerOut:"markerOut",onMarkerClick:"markerClick",onMarkerSelected:"markerSelected",onViewportChange:"viewportChange"};